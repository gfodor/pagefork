// Generated by CoffeeScript 1.6.3
(function() {
  $(function() {
    return $("#loadEtsy").click(function(e) {
      var url;
      e.preventDefault();
      url = "http://localhost:8000/test_html_docs/etsy1.html";
      $.get(url, function(response) {
        var asset_package;
        asset_package = (new HtmlAssetExtractor()).extract(response, "http://external.com", "myFork123");
        return console.log(asset_package);
      });
      return false;
    });
  });

  $(function() {
    var editorInfo, editorInfos, _i, _len, _results;
    editorInfos = [
      {
        target: "#styles",
        mode: "text/css",
        editorSelector: "#cssEditor",
        component: CssRenderer
      }, {
        target: "#html",
        mode: "text/html",
        editorSelector: "#htmlEditor",
        component: HtmlRenderer
      }
    ];
    _results = [];
    for (_i = 0, _len = editorInfos.length; _i < _len; _i++) {
      editorInfo = editorInfos[_i];
      _results.push((function(editorInfo) {
        var codeMirror, component, editorSelector, mode, target, updateContent;
        target = editorInfo.target, mode = editorInfo.mode, editorSelector = editorInfo.editorSelector, component = editorInfo.component;
        codeMirror = CodeMirror.fromTextArea($(editorSelector)[0], {
          mode: mode
        });
        if (window.codeEditors == null) {
          window.codeEditors = {};
        }
        window.codeEditors[editorSelector.replace("#", "")] = codeMirror;
        updateContent = function(content) {
          return React.renderComponent(new component({
            content: content
          }), $(target)[0]);
        };
        updateContent(codeMirror.getValue());
        return codeMirror.on("change", function(editor, change) {
          return updateContent(editor.getValue());
        });
      })(editorInfo));
    }
    return _results;
  });

}).call(this);
